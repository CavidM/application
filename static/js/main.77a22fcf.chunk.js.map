{"version":3,"sources":["components/application-header/application-steps/applicationSteps.js","store/reducers/customerInformation.js","store/reducers/notification.js","store/reducers/users.js","store/reducer.js","store/actions/actionTypes.js","store/index.js","tools/localStorage.js","services/customerInformationService.js","store/actions/notificationAction.js","store/actions/customerInformationAction.js","config/constants.js","components/customer-information-form/customerInformationForm.js","services/userService.js","store/actions/userAction.js","components/userInformationForm/userInformationForm.html.js","components/userInformationForm/userInformationForm.js","components/userInformationForm/userInformationFormModal.js","components/users/users.html.js","components/users/users.js","views/application/application.js","components/app-footer/appFooter.js","components/app-notification/appNotification.js","components/app-language-bar/appLanguageBar.js","components/app-header/appHeader.js","layouts/mainLayout.js","views/application/startApplication.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["steps","ApplicationSteps","page","useLocation","pathname","split","pageComplete","stepsComponent","Object","keys","map","step","i","current","className","key","Fragment","initialState","type","message","combineReducers","customerInformation","state","action","data","notification","users","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","localState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","subscribe","stringify","setItem","saveState","getState","saveCustomerInformationService","a","Promise","resolve","reject","setTimeout","addNotification","dispatch","removeNotification","saveCustomerInformation","res","CustomerInformationForm","history","useHistory","useSelector","useForm","register","handleSubmit","errors","onSubmit","Error","push","htmlFor","customerCode","id","name","defaultValue","ref","required","value","minLength","pattern","customerName","class","customerVoen","customerBranch","onClick","saveUserService","saveUser","UserInformationFormHtml","userName","userPhinCode","userEmail","userCodeName","userPhone","UserInformationForm","setShowUserFormModal","reset","UserInformationFormModal","showUserFormModal","children","style","display","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","UsersHtml","goBack","usersComponent","user","userSmsOtp","Users","useState","Application","path","AppFooter","alt","src","process","href","showNotification","React","memo","length","role","options","lang","label","toUpperCase","indicatorSeparatorStyle","IndicatorSeparator","innerProps","ApplanguageBar","components","backgroundColor","isSearchable","theme","borderRadius","colors","primary","neutral20","AppHeader","MainLayout","props","StartApplication","margin","Routes","exact","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"odAOMA,G,MAAQ,CACV,uBAAwB,0CACxB,mBAAoB,kDACpB,OAAU,cACV,aAAgB,qBAGL,SAASC,IAEpB,IACMC,EADWC,cACKC,SAASC,MAAM,KAAK,GAEtCC,EAAe,WAEbC,EAAiBC,OAAOC,KAAKT,GAAOU,KAAI,SAACC,EAAMC,GAEjD,IAAIC,EAAU,GASd,OAPIX,IAASS,IACTE,EAAU,UAGVP,EAAe,IAIf,yBAAKQ,UAAS,6BAAwBR,EAAxB,YAAwCO,GAAWE,IAAKH,GAClE,+BAAQZ,EAAMW,IACd,yBAAKG,UAAU,aAK3B,OACI,kBAAC,IAAME,SAAP,KACI,wBAAIF,UAAU,iCAAd,wBACA,wBAAIA,UAAU,uCAAd,2EAEA,yBAAKA,UAAU,yBAEVP,I,2DC7CXU,EAAe,GCGfA,EAAe,CACjBC,KAAM,GACNC,QAAS,I,OCLPF,EAAe,GCGNG,cAAgB,CAC3BC,oBHFW,WAAwC,IAA/BC,EAA8B,uDAAtBL,EAAcM,EAAQ,uCAElD,OAAOA,EAAOL,MACV,IIPiC,4BJQ7B,OAAOK,EAAOC,KAElB,QACI,OAAOF,IGJfG,aFGW,WAAwC,IAA/BH,EAA8B,uDAAtBL,EAAcM,EAAQ,uCAElD,OAAOA,EAAOL,MACV,IGZwB,mBHapB,OAAOK,EAAOC,KAElB,IGd2B,sBHevB,OAAOP,EAEX,QACI,OAAOK,IEZfI,MDJW,WAAwC,IAA/BJ,EAA8B,uDAAtBL,EAAcM,EAAQ,uCAElD,OAAOA,EAAOL,MACV,IEJiB,YFKb,MAAM,GAAN,mBACOI,GADP,CAEIC,EAAOC,OAGf,QACI,OAAOF,MGVbK,EAAmBC,OAAOC,sCAAwCC,IAElEC,ECNmB,WACrB,IACI,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACA,OAEJ,OAAOG,KAAKC,MAAMJ,GACpB,MAAOK,GACL,QDFWC,GAEbC,EAAQC,YAAYC,EAAUV,EAAYJ,KAEhDY,EAAMG,WAAU,YCES,SAACpB,GACtB,IACI,IAAMU,EAAkBG,KAAKQ,UAAUrB,GACvCW,aAAaW,QAAQ,QAASZ,GAChC,WDLFa,CAAUN,EAAMO,eAGLP,QEdR,SAAeQ,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EAEI,IAAIC,SAAQ,SAACC,EAASC,GAEzBC,YAAW,WACP,OAAOF,EAAQ,2EAChB,OANJ,4C,sBCGA,IAAMG,EAAkB,SAAC7B,GAE5Be,EAAMe,SAAS,CACXpC,KJLwB,mBIMxBM,UAIK+B,EAAqB,WAE9BhB,EAAMe,SAAS,CACXpC,KJZ2B,yBKI5B,SAAesC,EAAtB,kC,4CAAO,WAAuChC,GAAvC,eAAAwB,EAAA,+EAGiBD,IAHjB,cAGKU,EAHL,OAKClB,EAAMe,SAAS,CACXpC,KLZ6B,4BKa7BM,SAGJ6B,EAAgB,CACZnC,KCjBW,UDkBXC,QAASsC,IAZd,kBAeQA,GAfR,uCAmBCJ,EAAgB,CACZnC,KCzBU,SD0BVC,QAAS,KAAIA,UArBlB,kF,sBEIQ,SAASuC,IAEpB,IAAIC,EAAUC,cACRvC,EAAsBwC,aAAY,SAAAvC,GAAK,OAAIA,EAAMD,uBAHT,EAKHyC,cAAnCC,EALsC,EAKtCA,SAAUC,EAL4B,EAK5BA,aAAcC,EALc,EAKdA,OAE1BC,EAAQ,uCAAG,WAAM1C,GAAN,SAAAwB,EAAA,sEACGQ,EAAwBhC,GAD3B,8BAGK2C,OAHL,iDAObR,EAAQS,KAAK,iCAPA,2CAAH,sDAUd,OACI,kBAAC,IAAMpD,SAAP,KACI,yBAAKF,UAAU,8BACX,yBAAKA,UAAU,oCACX,8BACI,yBAAKA,UAAU,cACX,2BAAOuD,QAAQ,iBAAf,6BACA,2BAAOnD,KAAK,OACRJ,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQK,cAAR,aAAsC,IACjEC,GAAG,gBACHC,KAAK,eACLC,aAAY,OAAEpD,QAAF,IAAEA,OAAF,EAAEA,EAAqBiD,aACnCI,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,mBAClC0D,UAAW,CAAED,MAAO,EAAGzD,QAAS,wCAChC2D,QAAS,CAAEF,MAAO,SAAUzD,QAAS,uDAGnC,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQK,cACH,yBAAKxD,UAAU,oBACXmD,EAAOK,aAAanD,SACf,MAGtB,yBAAKL,UAAU,cACX,2BAAOuD,QAAQ,iBAAf,YACA,2BAAOnD,KAAK,OACRJ,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQc,cAAR,aAAsC,IACjER,GAAG,gBACHC,KAAK,eACLC,aAAcpD,EAAoB0D,aAClCL,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,wBAGhC,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQc,cACH,yBAAKC,MAAM,oBACPf,EAAOc,aAAa5D,SACf,MAGtB,yBAAKL,UAAU,cACX,2BAAOuD,QAAQ,iBAAf,WACA,2BAAOnD,KAAK,OACRJ,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQgB,cAAR,aAAsC,IACjEV,GAAG,gBACHC,KAAK,eACLC,aAAcpD,EAAoB4D,aAClCP,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,wBAGhC,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQgB,cACH,yBAAKD,MAAM,oBACPf,EAAOgB,aAAa9D,SACf,MAGtB,yBAAKL,UAAU,cACX,2BAAOuD,QAAQ,mBAAf,UACA,4BAAQG,KAAK,iBACTC,aAAcpD,EAAoB6D,gBAAkB,GACpDpE,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQiB,gBAAR,aAAwC,IACnER,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,sBAEtC,4BAAQyD,MAAM,IAAd,2BACA,4BAAQA,MAAM,KAAd,qBACA,4BAAQA,MAAM,KAAd,gBACA,4BAAQA,MAAM,KAAd,aAGM,OAANX,QAAM,IAANA,OAAA,EAAAA,EAAQiB,gBACH,yBAAKpE,UAAU,oBACXmD,EAAOiB,eAAe/D,SACjB,SAMlC,yBAAKL,UAAU,+CACX,yBAAKA,UAAU,YACX,4BACII,KAAK,SACLJ,UAAU,wCACVqE,QAASnB,EAAaE,IAH1B,sB,WC9Gb,SAAekB,IAAtB,+B,4CAAO,sBAAApC,EAAA,+EAEI,IAAIC,SAAQ,SAACC,EAASC,GAEzBC,YAAW,WACP,OAAOF,EAAQ,wDAChB,OANJ,4C,sBCMA,SAAemC,EAAtB,kC,4CAAO,WAAyB7D,GAAzB,eAAAwB,EAAA,+EAIiBoC,IAJjB,cAIK3B,EAJL,OAMClB,EAAMe,SAAS,CACXpC,KTVa,YSWbM,SAGJ6B,EAAgB,CACZnC,KHlBW,UGmBXC,QAASsC,IAbd,kBAgBQA,GAhBR,uCAmBCJ,EAAgB,CACZnC,KHzBU,SG0BVC,QAAS,KAAIA,UArBlB,kF,4BCHQ,SAASmE,EAAT,GAAgF,IAA7CvB,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,aAAcE,EAAoB,EAApBA,SAAUD,EAAU,EAAVA,OAEhF,OACI,kBAAC,IAAMjD,SAAP,KACI,yBAAKF,UAAU,8BACX,yBAAKA,UAAU,UACX,0BAAMA,UAAU,yBACZ,yBAAKA,UAAU,cACX,2BAAOuD,QAAQ,YAAf,UACA,2BAAOnD,KAAK,OACRJ,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQsB,UAAR,aAAkC,IAC7DhB,GAAG,WACHC,KAAK,WACLE,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,wBAGhC,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQsB,UACH,yBAAKP,MAAM,oBACPf,EAAOsB,SAASpE,SACX,MAGtB,yBAAKL,UAAU,cACX,2BAAOuD,QAAQ,iBAAf,gBACA,2BAAOnD,KAAK,OACRJ,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQuB,cAAR,aAAsC,IACjEjB,GAAG,iBACHC,KAAK,eACLE,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,wBAGhC,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQuB,cACH,yBAAK1E,UAAU,oBACXmD,EAAOuB,aAAarE,SACf,MAGtB,yBAAKL,UAAU,cACX,2BAAOuD,QAAQ,cAAf,SACA,2BAAOnD,KAAK,OACRJ,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQwB,WAAR,aAAmC,IAC9DlB,GAAG,aACHC,KAAK,YACLE,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,mBAClC2D,QAAS,CACLF,MAAO,4JACPzD,QAAS,2DAIX,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQwB,WACH,yBAAK3E,UAAU,oBACXmD,EAAOwB,UAAUtE,SACZ,MAGtB,yBAAKL,UAAU,cACX,2BAAOuD,QAAQ,kBAAf,kBACA,2BAAOnD,KAAK,OACRsD,KAAK,eACLD,GAAG,iBACHzD,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQyB,cAAR,aAAsC,IACjEhB,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,wBAIhC,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQyB,cACH,yBAAK5E,UAAU,oBACXmD,EAAOyB,aAAavE,SACf,MAGtB,yBAAKL,UAAU,cACX,2BAAOuD,QAAQ,cAAf,uBACA,2BAAOnD,KAAK,OACRJ,UAAS,wBAAwB,OAANmD,QAAM,IAANA,OAAA,EAAAA,EAAQ0B,WAAR,aAAmC,IAC9DpB,GAAG,aACHC,KAAK,YACLE,IAAKX,EAAS,CACVY,SAAU,CAAEC,OAAO,EAAMzD,QAAS,mBAClC2D,QAAS,CACLF,MAAO,wBACPzD,QAAS,mEAIX,OAAN8C,QAAM,IAANA,OAAA,EAAAA,EAAQ0B,WACH,yBAAK7E,UAAU,oBACXmD,EAAO0B,UAAUxE,SACZ,MAGtB,yBAAKL,UAAU,yBACX,2BAAOI,KAAK,WACRJ,UAAU,mBACVyD,GAAG,eACHC,KAAK,aACLE,IAAKX,MAET,2BAAOjD,UAAU,mBAAmBuD,QAAQ,gBAA5C,YAGJ,4BACInD,KAAK,SACLJ,UAAU,4BACVqE,QAASnB,EAAaE,IAH1B,0BCxGT,SAAS0B,EAAT,GAAsD,IAAxBC,EAAuB,EAAvBA,qBAAuB,EAEd/B,cAA1CC,EAFwD,EAExDA,SAAUC,EAF8C,EAE9CA,aAAcC,EAFgC,EAEhCA,OAAQ6B,EAFwB,EAExBA,MAElC5B,EAAQ,uCAAG,WAAM1C,GAAN,SAAAwB,EAAA,sEACGqC,EAAS7D,GADZ,8BAGK2C,OAHL,iDAOb0B,EAAqB,IACrBC,IARa,2CAAH,sDAWd,OACI,kBAACR,EAAD,CACIvB,SAAUA,EACVC,aAAcA,EACdE,SAAUA,EACVD,OAAQA,I,MCtBL,SAAS8B,EAAT,GAA0F,IAAtDC,EAAqD,EAArDA,kBAAmBH,EAAkC,EAAlCA,qBAAsBI,EAAY,EAAZA,SAExF,OACI,yBAAKnF,UAAS,qBAAgBkF,GAC1BE,MAAO,CAAEC,QAASH,EAAoB,QAAU,QAChDzB,GAAG,eAAe6B,SAAS,KAAKC,kBAAgB,oBAAoBC,cAAY,QAChF,yBAAKxF,UAAU,gBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,cAAcyD,GAAG,qBAA/B,iDACA,4BAAQrD,KAAK,SAASJ,UAAU,QAAQyF,eAAa,QAAQC,aAAW,QACpErB,QAAS,WAAQU,EAAqB,MAEtC,0BAAMS,cAAY,QAAlB,UAGR,yBAAKxF,UAAU,cACVmF,M,MCfV,SAASQ,EAAT,GAAgF,IAA3DC,EAA0D,EAA1DA,OAAQV,EAAkD,EAAlDA,kBAAmBH,EAA+B,EAA/BA,qBAErDc,EAFoF,EAATjF,MAEpDhB,KAAI,SAACkG,EAAMhG,GAEpC,IAAIiG,EAAaD,EAAKC,WAAa,SAAM,GAEzC,OAEI,wBAAI9F,IAAKH,GACL,8BAAOA,GACP,4BAAKgG,EAAKrB,UACV,4BAAKqB,EAAKpB,cACV,4BAAKoB,EAAKnB,WACV,4BAAKmB,EAAKlB,cACV,4BAAKkB,EAAKjB,WACV,4BACKkB,OAMjB,OACI,6BACI,2BAAO/F,UAAU,uBACb,+BACI,4BACI,iCACA,sCACA,4CACA,qCACA,8CACA,mDACA,yCAGR,+BACK6F,IAIT,yBAAK7F,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQA,UAAU,gBAAgBqE,QAAS,WAAQU,EAAqB,UAAxE,gDAMR,kBAACE,EAAD,CAA0BC,kBAAmBA,EAAmBH,qBAAsBA,GAClF,kBAACD,EAAD,CAAqBC,qBAAsBA,KAG/C,yBAAK/E,UAAU,+CACX,yBAAKA,UAAU,YACX,4BAAQI,KAAK,SAASJ,UAAU,qCAAqCqE,QAASuB,GAA9E,SAEJ,yBAAK5F,UAAU,YACX,4BAAQI,KAAK,SAASJ,UAAU,yCAAhC,sBCxDL,SAASgG,IAEpB,IAAInD,EAAUC,cAFc,EAGoBmD,mBAAS,IAH7B,mBAGvBf,EAHuB,KAGJH,EAHI,KAKtBnE,EAAQmC,aAAY,SAAAvC,GAAK,OAAIA,EAAMI,SAMzC,OACI,kBAAC+E,EAAD,CACIC,OANO,WACX/C,EAAQ+C,UAMJV,kBAAmBA,EACnBH,qBAAsBA,EACtBnE,MAAOA,I,MCbJ,SAASsF,IAEpB,OACI,yBAAKlG,UAAU,8BACX,yBAAKA,UAAU,UACX,kBAACb,EAAD,MACA,kBAAC,IAAD,KAEQ,kBAAC,IAAD,CAAOgH,KAAK,qCACR,kBAACvD,EAAD,OAEJ,kBAAC,IAAD,CAAOuD,KAAK,iCACR,kBAACH,EAAD,U,MCnBb,SAASI,IAEpB,OACI,yBAAKpG,UAAU,2BAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,+BACI,yBAAKqG,IAAI,MAAMC,IAAG,UAAKC,eAAL,wCAEtB,4LAGA,qEAKJ,yBAAKvG,UAAU,wBACX,yEAGA,wFAC+C,6BAD/C,8EAKJ,yBAAKA,UAAU,4BACX,wEAGA,0GAGA,wBAAIA,UAAU,iDACV,wBAAIA,UAAU,mBACV,uBAAGwG,KAAK,KACJ,yBAAKF,IAAG,UAAKC,eAAL,4BAGhB,wBAAIvG,UAAU,mBACV,uBAAGwG,KAAK,KACJ,yBAAKF,IAAG,UAAKC,eAAL,mCAGhB,wBAAIvG,UAAU,mBACV,uBAAGwG,KAAK,KACJ,yBAAKF,IAAG,UAAKC,eAAL,sC,UC7CpCE,GAAmB,EAERC,MAAMC,MAAK,WAEtB,IAAMhG,EAAeoC,aAAY,SAAAvC,GAAK,OAAIA,EAAMG,gBAEhD,OAAgC,IAA7BA,EAAaP,KAAKwG,OAEV,MAGXH,GAAmB,EAEnBnE,YAAW,WAEHmE,IAIJhE,IAEAgE,GAAmB,KACpB,KAGC,6BACI,yBAAKzG,UAAS,sBAAiBW,EAAaP,KAA9B,gCAAkEyG,KAAK,SACjF,gCAASlG,EAAaN,SACtB,4BAAQD,KAAK,SAASJ,UAAU,QAAQyF,eAAa,QAAQC,aAAW,QAAQrB,QAAS5B,GACrF,0BAAM+C,cAAY,QAAlB,e,gBC5BdsB,G,MAFQ,CAAC,KAAM,MAEClH,KAAI,SAAAmH,GAAI,MAAK,CAC/BjD,MAAOiD,EACPC,MACI,yBAAKhH,UAAU,WACX,yBACIqG,IAAKU,EACLT,IAAG,UAAKC,eAAL,0BAA6CQ,EAA7C,QACH/G,UAAU,iBAEd,2BAAOA,UAAU,cAAjB,UAAkC+G,EAAKE,sBAK7CC,EAA0B,CAC5B7B,QAAS,QAGP8B,EAAqB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC1B,OAAO,wCAAMhC,MAAO8B,GAA6BE,KAGtC,SAASC,IAEpB,OACI,yBAAKrH,UAAU,oBACX,kBAAC,IAAD,CAAQ8G,QAASA,EACbQ,WAAY,CAAEH,sBACd/B,MAAO,CAAEmC,gBAAiB,WAC1B5D,aAAcmD,EAAQ,GACtBU,cAAc,EACdC,MAAO,SAACA,GAAD,mBAAC,eACDA,GADA,IAEHC,aAAc,EACdC,OAAO,2BACAF,EAAME,QADP,IAEFC,QAAS,UACTC,UAAW,kBCxCpB,SAASC,IAEpB,OACI,kBAAC,IAAM5H,SAAP,KAEI,yBAAKF,UAAU,+BACX,yBAAKA,UAAU,YACX,yBAAKqG,IAAI,MAAMC,IAAG,UAAKC,eAAL,2BAEtB,yBAAKvG,UAAU,YACX,kBAAC,EAAD,S,MCPL,SAAS+H,GAAWC,GAE/B,OACI,yBAAKhI,UAAU,4BACX,kBAAC8H,EAAD,MAEA,kBAAC,EAAD,MAECE,EAAM7C,SAEP,kBAACiB,EAAD,OCbG,SAAS6B,KAEpB,IAAMpF,EAAUC,cAMhB,OACI,yBAAK9C,UAAU,wCAAwCoF,MAL7C,CACV8C,OAAQ,qBAKJ,4BAAQlI,UAAU,kBAAkBqE,QAAS,kBAAMxB,EAAQS,KAAK,uCAAhE,0ECFG,SAAS6E,GAAOH,GAE3B,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAACD,GAAD,KACI,kBAAC,IAAD,CAAOK,OAAK,EAACjC,KAAK,KACd,kBAAC8B,GAAD,OAEJ,kBAAC,IAAD,CAAO9B,KAAK,gBACR,kBAACD,EAAD,WCXbmC,OARf,WACE,OACE,yBAAKrI,UAAU,OACX,kBAACmI,GAAD,QCMFG,GAAcC,QACW,cAA7BzH,OAAO0H,SAASC,UAEe,UAA7B3H,OAAO0H,SAASC,UAEhB3H,OAAO0H,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACP9F,SAAS2F,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3I,QACfsI,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCvFjEC,IAASC,OAEL,kBAAC,IAAD,CAAUrI,MAAOA,GACf,kBAAC,GAAD,OAGJsI,SAASC,eAAe,SDOnB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAI1D,eAAwBzF,OAAO0H,SAAShC,MACpD0D,SAAWpJ,OAAO0H,SAAS0B,OAIvC,OAGFpJ,OAAOqJ,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMrC,eAAN,sBAEP+B,KAgEV,SAAiCM,EAAOC,GAEtCuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5BrB,MAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM3B,MAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,MAAK,WAC7BlI,OAAO0H,SAASqC,eAKpBlC,GAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IACN,oEAvFAsB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM3B,MAAK,WACjCO,QAAQC,IACN,iHAMJb,GAAgBC,EAAOC,OC7B/BE,K","file":"static/js/main.77a22fcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './applicationSteps.scss';\r\nimport {\r\n    useLocation\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst steps = {\r\n    'customer-information': 'MÜŞTƏRİ MƏLUMATI',\r\n    'user-information': 'İSTİFADƏÇİ MƏLUMATI',\r\n    'rights': 'HÜQUQLAR',\r\n    'confirmation': 'TƏSDİQ'\r\n};\r\n\r\nexport default function ApplicationSteps() {\r\n\r\n    const location = useLocation();\r\n    const page = location.pathname.split('/')[2];\r\n\r\n    let pageComplete = 'complete';\r\n\r\n    const stepsComponent = Object.keys(steps).map((step, i) => {\r\n\r\n        let current = '';\r\n\r\n        if (page === step) {\r\n            current = 'current';\r\n\r\n            // Stop adding the \"complete\" class to further pages\r\n            pageComplete = '';\r\n        }\r\n\r\n        return (\r\n            <div className={`col step pl-0 pr-0 ${pageComplete} ${current}`} key={i}>\r\n                <label>{steps[step]}</label>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1 className=\"application-title text-center\">ƏRİZƏ</h1>\r\n            <h2 className=\"application-title-label text-center\"> İnternet Bankçılıq xidmətinə qoşulma </h2>\r\n\r\n            <div className=\"row steps text-center\">\r\n                \r\n                {stepsComponent}\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import { SAVE_CUSTOMER_INFORMATION } from \"store/actions/actionTypes\";\r\n\r\nconst initialState = {}\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n    switch(action.type) {\r\n        case SAVE_CUSTOMER_INFORMATION: {\r\n            return action.data\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","\r\n// const \r\n\r\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"store/actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    type: '',\r\n    message: '' \r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n    switch(action.type) {\r\n        case ADD_NOTIFICATION: {\r\n            return action.data\r\n        }\r\n        case REMOVE_NOTIFICATION: {\r\n            return initialState\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { SAVE_USER } from \"store/actions/actionTypes\";\r\n\r\nconst initialState = []\r\n\r\nexport default function(state = initialState, action) {\r\n\r\n    switch(action.type) {\r\n        case SAVE_USER: {\r\n            return [\r\n                ...state,\r\n                action.data\r\n            ]\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport customerInformation from 'store/reducers/customerInformation'\r\nimport notification from 'store/reducers/notification'\r\nimport users from 'store/reducers/users'\r\n\r\nexport default combineReducers({\r\n    customerInformation,\r\n    notification,\r\n    users\r\n})","export const SAVE_CUSTOMER_INFORMATION = 'SAVE_CUSTOMER_INFORMATION';\r\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION'\r\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\r\nexport const SAVE_USER = 'SAVE_USER'","import { createStore, compose } from 'redux'\r\nimport reducers from 'store/reducer'\r\nimport { loadState, saveState } from 'tools/localStorage';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst localState = loadState();\r\n\r\nconst store = createStore(reducers, localState, composeEnhancers())\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n\r\nexport default store;","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};","export async function saveCustomerInformationService() {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        setTimeout(() => {\r\n            return resolve('Müştəri məlumatları yadda saxlanıldı');\r\n        }, 0);\r\n\r\n        //imitation of error\r\n        // return reject(new Error('something went wrong'));\r\n    })\r\n}","import { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"./actionTypes\"\r\nimport store from 'store';\r\n\r\nexport const addNotification = (data) => {\r\n\r\n    store.dispatch({\r\n        type: ADD_NOTIFICATION,\r\n        data\r\n    })\r\n}\r\n\r\nexport const removeNotification = () => {\r\n\r\n    store.dispatch({\r\n        type: REMOVE_NOTIFICATION\r\n    })\r\n}","import { SAVE_CUSTOMER_INFORMATION } from \"./actionTypes\"\r\nimport store from 'store';\r\nimport { saveCustomerInformationService } from 'services/customerInformationService';\r\nimport { addNotification } from \"./notificationAction\";\r\nimport { DANGER, SUCCESS } from \"config/constants\";\r\n\r\nexport async function saveCustomerInformation(data) {\r\n\r\n    try {\r\n        let res = await saveCustomerInformationService();\r\n\r\n        store.dispatch({\r\n            type: SAVE_CUSTOMER_INFORMATION,\r\n            data\r\n        });\r\n\r\n        addNotification({\r\n            type: SUCCESS,\r\n            message: res\r\n        })\r\n\r\n        return res;\r\n    }\r\n    catch(err) {\r\n\r\n        addNotification({\r\n            type: DANGER,\r\n            message: err.message\r\n        })\r\n\r\n        return err;\r\n    }\r\n}","export const SUCCESS = 'success';\r\nexport const DANGER = 'danger';\r\nexport const WARNING = 'warning';\r\nexport const INFO = 'info';","import React from 'react';\r\nimport './customerInformationForm.scss';\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  useSelector } from 'react-redux';\r\nimport { saveCustomerInformation } from 'store/actions/customerInformationAction';\r\n\r\n\r\nexport default function CustomerInformationForm() {\r\n\r\n    let history = useHistory();\r\n    const customerInformation = useSelector(state => state.customerInformation);\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = async data => {\r\n        let res = await saveCustomerInformation(data);\r\n\r\n        if(res instanceof Error) {\r\n            return;\r\n        }\r\n\r\n        history.push('/application/user-information');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-xl-4 col-lg-5 col-md-6 col-7\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"customer-code\">Müştəri kodu</label>\r\n                            <input type=\"text\"\r\n                                className={`form-control ${errors?.customerCode ? `is-invalid` : ''}`}\r\n                                id=\"customer-code\"\r\n                                name=\"customerCode\"\r\n                                defaultValue={customerInformation?.customerCode}\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                    minLength: { value: 7, message: 'Ən azı 7 simvol daxil edin' },\r\n                                    pattern: { value: /[0-9]/g, message: 'Yalnız rəqəmlər daxil edin' }\r\n                                })} />\r\n                            {\r\n                                errors?.customerCode ?\r\n                                    (<div className=\"invalid-feedback\">\r\n                                        {errors.customerCode.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"customer-name\">Adı</label>\r\n                            <input type=\"text\"\r\n                                className={`form-control ${errors?.customerName ? `is-invalid` : ''}`}\r\n                                id=\"customer-name\"\r\n                                name=\"customerName\"\r\n                                defaultValue={customerInformation.customerName}\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                })} />\r\n                            {\r\n                                errors?.customerName ?\r\n                                    (<div class=\"invalid-feedback\">\r\n                                        {errors.customerName.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"customer-voen\">VÖEN</label>\r\n                            <input type=\"text\"\r\n                                className={`form-control ${errors?.customerVoen ? `is-invalid` : ''}`}\r\n                                id=\"customer-voen\"\r\n                                name=\"customerVoen\"\r\n                                defaultValue={customerInformation.customerVoen}\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                })} />\r\n                            {\r\n                                errors?.customerVoen ?\r\n                                    (<div class=\"invalid-feedback\">\r\n                                        {errors.customerVoen.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"customer-branch\">Filial</label>\r\n                            <select name=\"customerBranch\"\r\n                                defaultValue={customerInformation.customerBranch || \"\"}\r\n                                className={`form-control ${errors?.customerBranch ? `is-invalid` : ''}`}\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                })} >\r\n                                <option value=\"\">Siyahıdan seçin</option>\r\n                                <option value=\"1\">Neftçilər</option>\r\n                                <option value=\"2\">Azadlıq</option>\r\n                                <option value=\"3\">Yasamal</option>\r\n                            </select>\r\n                            {\r\n                                errors?.customerBranch ?\r\n                                    (<div className=\"invalid-feedback\">\r\n                                        {errors.customerBranch.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-between step-navigation\">\r\n                <div className=\"col pr-0\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary float-right next-step\"\r\n                        onClick={handleSubmit(onSubmit)}>\r\n                        İrəli\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","export async function saveUserService() {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        setTimeout(() => {\r\n            return resolve('İstifadəçi yadda saxlanıldı');\r\n        }, 0);\r\n\r\n        //imitation of error\r\n        // return reject(new Error('something went wrong'));\r\n    })\r\n}","import store from 'store';\r\nimport { SAVE_USER } from './actionTypes';\r\nimport {saveUserService} from 'services/userService';\r\nimport { addNotification } from './notificationAction';\r\nimport { DANGER, SUCCESS } from 'config/constants';\r\n\r\nexport async function saveUser (data) {\r\n\r\n    try {\r\n\r\n        let res = await saveUserService();\r\n\r\n        store.dispatch({\r\n            type: SAVE_USER,\r\n            data\r\n        })\r\n\r\n        addNotification({\r\n            type: SUCCESS,\r\n            message: res\r\n        })\r\n\r\n        return res;\r\n    }\r\n    catch (err) {\r\n        addNotification({\r\n            type: DANGER,\r\n            message: err.message\r\n        })\r\n\r\n        return err;\r\n    }\r\n}","import React from 'react';\r\nimport './userInformationForm.scss';\r\n\r\nexport default function UserInformationFormHtml({ register, handleSubmit, onSubmit, errors }) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12\">\r\n                    <form className=\"user-information-form\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"userName\">S.A.A.</label>\r\n                            <input type=\"text\"\r\n                                className={`form-control ${errors?.userName ? `is-invalid` : ''}`}\r\n                                id=\"userName\"\r\n                                name=\"userName\"\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                })} />\r\n                            {\r\n                                errors?.userName ?\r\n                                    (<div class=\"invalid-feedback\">\r\n                                        {errors.userName.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"customer-name\">FİN Kod</label>\r\n                            <input type=\"text\"\r\n                                className={`form-control ${errors?.userPhinCode ? `is-invalid` : ''}`}\r\n                                id=\"user-phin-code\"\r\n                                name=\"userPhinCode\"\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                })} />\r\n                            {\r\n                                errors?.userPhinCode ?\r\n                                    (<div className=\"invalid-feedback\">\r\n                                        {errors.userPhinCode.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"user-email\">Email</label>\r\n                            <input type=\"text\"\r\n                                className={`form-control ${errors?.userEmail ? `is-invalid` : ''}`}\r\n                                id=\"user-email\"\r\n                                name=\"userEmail\"\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                    pattern: {\r\n                                        value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                        message: \"Daxil edilən düzgün email formati deyil\"\r\n                                    }\r\n                                })} />\r\n                            {\r\n                                errors?.userEmail ?\r\n                                    (<div className=\"invalid-feedback\">\r\n                                        {errors.userEmail.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"user-code-name\">Kod sözü</label>\r\n                            <input type=\"text\"\r\n                                name=\"userCodeName\"\r\n                                id=\"user-code-name\"\r\n                                className={`form-control ${errors?.userCodeName ? `is-invalid` : ''}`}\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                })} >\r\n                            </input>\r\n                            {\r\n                                errors?.userCodeName ?\r\n                                    (<div className=\"invalid-feedback\">\r\n                                        {errors.userCodeName.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"user-phone\">Mobil nömrə</label>\r\n                            <input type=\"text\"\r\n                                className={`form-control ${errors?.userPhone ? `is-invalid` : ''}`}\r\n                                id=\"user-phone\"\r\n                                name=\"userPhone\"\r\n                                ref={register({\r\n                                    required: { value: true, message: 'Bu xana vacibdi' },\r\n                                    pattern: {\r\n                                        value: /([+]?\\994}?)?(\\d{9})/g,\r\n                                        message: \"Daxil edilən düzgün nömrə formati deyil\"\r\n                                    }\r\n                                })} />\r\n                            {\r\n                                errors?.userPhone ?\r\n                                    (<div className=\"invalid-feedback\">\r\n                                        {errors.userPhone.message}\r\n                                    </div>) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group form-check\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"user-sms-otp\"\r\n                                name=\"userSmsOtp\"\r\n                                ref={register()}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"user-sms-otp\">SMS OTP</label>\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                            onClick={handleSubmit(onSubmit)}>\r\n                            Əlavə et\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { saveUser } from 'store/actions/userAction';\r\nimport UserInformationFormHtml from './userInformationForm.html';\r\n\r\nexport default function UserInformationForm({setShowUserFormModal}) {\r\n\r\n    const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = async data => {\r\n        let res = await saveUser(data);\r\n\r\n        if(res instanceof Error) {\r\n            return;\r\n        }\r\n\r\n        setShowUserFormModal('');\r\n        reset();\r\n    };\r\n\r\n    return (\r\n        <UserInformationFormHtml\r\n            register={register}\r\n            handleSubmit={handleSubmit}\r\n            onSubmit={onSubmit}\r\n            errors={errors}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport './userInformationFormModal.scss';\r\n\r\nexport default function UserInformationFormModal({ showUserFormModal, setShowUserFormModal, children }) {\r\n\r\n    return (\r\n        <div className={`modal fade ${showUserFormModal}`}\r\n            style={{ display: showUserFormModal ? 'block' : 'none' }}\r\n            id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">İstifadəçi məlumatları</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n                            onClick={() => { setShowUserFormModal('') }}\r\n                        >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import UserInformationForm from 'components/userInformationForm/userInformationForm';\r\nimport UserInformationFormModal from 'components/userInformationForm/userInformationFormModal';\r\nimport React from 'react';\r\nimport './users.scss';\r\n\r\nexport default function UsersHtml({ goBack, showUserFormModal, setShowUserFormModal, users }) {\r\n\r\n    const usersComponent = users.map((user, i) => {\r\n\r\n        let userSmsOtp = user.userSmsOtp ? '✓' : '';\r\n\r\n        return (\r\n            // must be uuid\r\n            <tr key={i}>\r\n                <th>{++i}</th>\r\n                <td>{user.userName}</td>\r\n                <td>{user.userPhinCode}</td>\r\n                <td>{user.userEmail}</td>\r\n                <td>{user.userCodeName}</td>\r\n                <td>{user.userPhone}</td>\r\n                <td>\r\n                    {userSmsOtp}\r\n                </td>\r\n            </tr>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>S.A.A.</th>\r\n                        <th>FİN Kod</th>\r\n                        <th>Email</th>\r\n                        <th>Kod sözü</th>\r\n                        <th>Mobil nömrə</th>\r\n                        <th>SMS OTP</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {usersComponent}\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <button className=\"btn btn-light\" onClick={() => { setShowUserFormModal('show') }}>\r\n                        Yeni istifadəçi əlavə et\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <UserInformationFormModal showUserFormModal={showUserFormModal} setShowUserFormModal={setShowUserFormModal}>\r\n                <UserInformationForm setShowUserFormModal={setShowUserFormModal} />\r\n            </UserInformationFormModal>\r\n\r\n            <div className=\"row justify-content-between step-navigation\">\r\n                <div className=\"col pl-0\">\r\n                    <button type=\"submit\" className=\"btn btn-light float-left next-step\" onClick={goBack}>Geri</button>\r\n                </div>\r\n                <div className=\"col pr-0\">\r\n                    <button type=\"submit\" className=\"btn btn-primary float-right next-step\">İrəli</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport UsersHtml from './users.html';\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\nexport default function Users() {\r\n\r\n    let history = useHistory();\r\n    let [showUserFormModal, setShowUserFormModal] = useState('');\r\n\r\n    const users = useSelector(state => state.users);\r\n\r\n    const goBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <UsersHtml\r\n            goBack={goBack}\r\n            showUserFormModal={showUserFormModal}\r\n            setShowUserFormModal={setShowUserFormModal}\r\n            users={users}\r\n        />\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport ApplicationSteps from 'components/application-header/application-steps/applicationSteps';\r\nimport CustomerInformationForm from 'components/customer-information-form/customerInformationForm';\r\nimport Users from 'components/users/users';\r\nimport './application.scss';\r\n\r\nexport default function Application() {\r\n\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-10\">\r\n                <ApplicationSteps />\r\n                <Switch>\r\n                    {/* <div className=\"step-container\"> */}\r\n                        <Route path=\"/application/customer-information\">\r\n                            <CustomerInformationForm />\r\n                        </Route>\r\n                        <Route path=\"/application/user-information\">\r\n                            <Users />\r\n                        </Route>\r\n                    {/* </div> */}\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './appFooter.scss';\r\n\r\nexport default function AppFooter() {\r\n\r\n    return (\r\n        <div className=\"app-footer container-md\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col company-info\">\r\n                    <label>\r\n                        <img alt=\"ATB\" src={`${process.env.PUBLIC_URL}/icons/logo/logo-company-name.svg`} />\r\n                    </label>\r\n                    <p>\r\n                        AR Mərkəzi Bankı tərəfindən \"Azər-Türk Bank\" ASC-yə 29.06.1995-ci il tarixində 234№-li lisenziya verilib\r\n                    </p>\r\n                    <p>\r\n                        © 2002-2020 Azər-Türk Bank\r\n\r\n                    </p>\r\n                </div>\r\n                <div className=\"col company-contacts\">\r\n                    <label>\r\n                        BİZİMLƏ ƏLAQƏ\r\n                    </label>\r\n                    <p>\r\n                        +994 12 945 Azərbaycan daxilində zəng edin <br/>\r\n                        +994 12 945 Xaricdən gələn zənglər üçün\r\n                    </p>\r\n                </div>\r\n                <div className=\"col company-social-media\">\r\n                    <label>\r\n                        BİZİ İZLƏYİN\r\n                    </label>\r\n                    <p>\r\n                        Xəbərlərimizdən ilk olaraq Siz xəbərdar olun!\r\n                    </p>\r\n                    <ul className=\"social-links list-group list-group-horizontal\">\r\n                        <li className=\"list-group-item\">\r\n                            <a href=\"#\">\r\n                                <img src={`${process.env.PUBLIC_URL}/icons/social/fb.svg`} />\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <a href=\"#\">\r\n                                <img src={`${process.env.PUBLIC_URL}/icons/social/instagram.svg`} />\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <a href=\"#\">\r\n                                <img src={`${process.env.PUBLIC_URL}/icons/social/linkedin.svg`} />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './appNotification.scss';\r\nimport {useSelector} from 'react-redux';\r\nimport { removeNotification } from 'store/actions/notificationAction';\r\n\r\nlet showNotification = false;\r\n\r\nexport default React.memo(function AppNotification() {\r\n\r\n    const notification = useSelector(state => state.notification);\r\n\r\n    if(notification.type.length === 0) {\r\n\r\n        return null;\r\n    }\r\n\r\n    showNotification = true;\r\n\r\n    setTimeout(() => {\r\n\r\n        if(!showNotification) {\r\n            return;\r\n        }\r\n\r\n        removeNotification();\r\n\r\n        showNotification = false;\r\n    }, 2000);\r\n\r\n    return (\r\n        <div>\r\n            <div className={`alert alert-${notification.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{notification.message}</strong>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={removeNotification}>\r\n                    <span aria-hidden=\"true\">×</span>\r\n                </button></div>\r\n        </div>\r\n    );\r\n});","import React from 'react';\r\nimport Select from 'react-select'\r\nimport './appLanguageBar.scss';\r\n\r\nconst langs = ['az', 'en'];\r\n\r\nconst options = langs.map(lang => ({\r\n    value: lang,\r\n    label: (\r\n        <div className=\"options\">\r\n            <img\r\n                alt={lang}\r\n                src={`${process.env.PUBLIC_URL}/icons/country/${lang}.svg`}\r\n                className=\"country-icon\">\r\n            </img>\r\n            <label className=\"lang-label\">{`${lang.toUpperCase()}`}</label>\r\n        </div>\r\n    )\r\n}))\r\n\r\nconst indicatorSeparatorStyle = {\r\n    display: 'none'\r\n};\r\n\r\nconst IndicatorSeparator = ({ innerProps }) => {\r\n    return <span style={indicatorSeparatorStyle} {...innerProps} />;\r\n};\r\n\r\nexport default function ApplanguageBar() {\r\n\r\n    return (\r\n        <div className=\"app-language-bar\">\r\n            <Select options={options}\r\n                components={{ IndicatorSeparator }}\r\n                style={{ backgroundColor: \"#F4F5F6\" }}\r\n                defaultValue={options[0]}\r\n                isSearchable={false}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 0,\r\n                    colors: {\r\n                        ...theme.colors,\r\n                        primary: '#F4F5F6',\r\n                        neutral20: '#bfbfbf'\r\n                    },\r\n                })}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport AppLanguageBar from 'components/app-language-bar/appLanguageBar';\r\n\r\nexport default function AppHeader() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"row justify-content-between\">\r\n                <div className=\"col-auto\">\r\n                    <img alt=\"ATB\" src={`${process.env.PUBLIC_URL}/icons/logo/logo.svg`}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <AppLanguageBar />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}","import AppFooter from 'components/app-footer/appFooter';\r\nimport AppNotification from 'components/app-notification/appNotification';\r\nimport React from 'react';\r\nimport AppHeader from '../components/app-header/appHeader';\r\nimport './mainLayout.scss';\r\n\r\nexport default function MainLayout(props) {\r\n\r\n    return (\r\n        <div className=\"app-wrapper container-md\">\r\n            <AppHeader />\r\n\r\n            <AppNotification/>\r\n\r\n            {props.children}\r\n\r\n            <AppFooter />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport default function StartApplication() {\r\n\r\n    const history = useHistory();\r\n\r\n    const style = {\r\n        margin: \"150px auto 200px\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"start-application-wrapper text-center\" style={style}>\r\n            <button className=\"btn btn-primary\" onClick={() => history.push('/application/customer-information')}>\r\n                İnternet Bankçılıq xidmətinə qoşulun\r\n            </button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport Application from './views/application/application';\r\nimport MainLayout from './layouts/mainLayout';\r\nimport StartApplication from 'views/application/startApplication';\r\n\r\nexport default function Routes(props) {\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <MainLayout>\r\n                        <Route exact path=\"/\">\r\n                            <StartApplication />\r\n                        </Route>\r\n                        <Route path=\"/application\">\r\n                            <Application />\r\n                        </Route>\r\n                    </MainLayout>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './style/custom.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}